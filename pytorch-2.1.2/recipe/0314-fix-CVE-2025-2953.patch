From 923f14932fb79728287355806f854dd65258070b Mon Sep 17 00:00:00 2001
From: "Archana.Shinde1" <archana.shinde1@ibm.com>
Date: Fri, 11 Jul 2025 06:57:31 +0000
Subject: [PATCH] fix CVE-2025-2953

---
 aten/src/ATen/native/mkldnn/Utils.cpp | 1 +
 test/test_mkldnn.py                   | 6 ++++++
 2 files changed, 7 insertions(+)

diff --git a/aten/src/ATen/native/mkldnn/Utils.cpp b/aten/src/ATen/native/mkldnn/Utils.cpp
index bebc54046f1..313af8a37f2 100644
--- a/aten/src/ATen/native/mkldnn/Utils.cpp
+++ b/aten/src/ATen/native/mkldnn/Utils.cpp
@@ -19,6 +19,7 @@ std::vector<int64_t> pool_output_sizes(
   output_size[1] = input_size[1];
 
   for (const auto i : c10::irange(2, input_size.size())) {
+    TORCH_CHECK_VALUE(stride[i -2] > 0, "Strides must be positive!");
     output_size[i] = pooling_output_shape_pad_lr<int64_t>(
       input_size[i],
       kernel_size[i - 2],
diff --git a/test/test_mkldnn.py b/test/test_mkldnn.py
index bad719254da..65845b3f9ed 100644
--- a/test/test_mkldnn.py
+++ b/test/test_mkldnn.py
@@ -1488,5 +1488,11 @@ class TestMkldnn(TestCase):
             y2 = torch.bmm(a2, b)
             self.assertEqual(y1, y2)
 
+    def test_mkldnn_error_on_zero_stride(self, device):
+        # Regression test for https://github.com/pytorch/pytorch/issues/149274
+        x = torch.rand(1, 2, 3, 3).to_mkldnn()
+        with self.assertRaises(ValueError):
+            torch.mkldnn_max_pool2d(x, kernel_size=3, stride=0)
+
 if __name__ == '__main__':
     run_tests()
-- 
2.40.1

