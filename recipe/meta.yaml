{% set version = "1.10.1" %}

package:
  name: pytorch-base
  version: {{ version }}

source:
  git_url: https://github.com/pytorch/pytorch.git
  git_rev: v{{ version }}
  patches:
    # 01xx - patch is specific to open-ce and will always be carried forward and not upstreamed
    - 0100-set-cmake_minimum_required-to-3.14.patch
#    - 0104-onnx-tensorrt-TRT7.patch                  # [py<39]
    - 0106-disable-SHM-and-CMA-for-tensorpipe.patch
    - 0107-fix-clock-gettime-undefind-error-for-sleef.patch

    # 03xx - patch temporary to fix a problem that when fixed upstream can be removed
    - 0302-cpp-extension.patch
    - 0307-package-tbb-headers.patch                 #[build_type=='cpu']
    - 0311-PR66085-Remove-unused-dump-method-from-VSX-vec256-methods.patch
    - 0312-PR67331-Dummpy-VSX-bfloat16-implementation.patch
    - 0313-add-missing-vsx-dispatch.patch

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('fortran') }}
    - git >={{ git }}
    - patch

  host:
    - make
    - cmake {{ cmake }}
    - python {{ python }}
    - numpy {{ numpy }}
    - setuptools {{ setuptools }}
    - pyyaml {{ pyyaml }}
    - cffi {{ cffi }}
    - protobuf {{ protobuf }}
    - future {{ future }}
    - openblas-devel {{ openblas }}
    - numactl {{ numactl }}
    - lmdb {{ lmdb }}
    - leveldb {{ leveldb }}
    - typing_extensions {{ typing_extensions }}
{% if build_type == 'cuda' %}
    - cudnn {{ cudnn }}
    - nccl {{ nccl }}
    - magma {{ magma }}
   #- tensorrt {{ tensorrt }}                #[py<38]
{% endif %}

  run:
    - python {{ python }}
    - numpy {{ numpy }}
    - cffi {{ cffi }}
    - protobuf {{ protobuf }}
    - tabulate {{ tabulate }}
    - future {{ future }}
    - pillow {{ pillow }}
    - typing_extensions {{ typing_extensions }}
    - click {{ click }}
    - networkx {{ networkx }}
    - scipy {{ scipy }}
    - numactl {{ numactl }}
    - lmdb                        # versioning handled by run_exports
    - leveldb                     # versioning handled by run_exports
    - pyyaml {{ pyyaml }}
    - libgfortran-ng              # versioning handled by run_exports
    - _pytorch_select {{ pytorch_select_version }}
{% if build_type == 'cuda' %}
    - cudatoolkit {{ cudatoolkit }}
    - cudnn {{ cudnn }}
    - nccl {{ nccl }}
   #- tensorrt {{ tensorrt }}                    #[py<38]
{% endif %}

  run_constrained:
    - tensorboard {{ tensorboard }}

build:
  number: 1
{% if build_type == 'cpu' %}
  string: h{{ PKG_HASH }}_{{ build_type }}_py{{ python | replace(".", "") }}_pb{{ protobuf | replace(".*", "")}}_{{ PKG_BUILDNUM }}
{% else %}
  string: h{{ PKG_HASH }}_{{ build_type }}{{ cudatoolkit | replace(".*", "") }}_py{{ python | replace(".", "") }}_pb{{ protobuf | replace(".*", "")}}_{{ PKG_BUILDNUM }}
{% endif %}
  detect_binary_files_with_prefix: False
  script_env:
    - CUDA_HOME

about:
  home: http://pytorch.org/
  license: BSD 3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: PyTorch is an optimized tensor library for deep learning using GPUs and CPUs.
  description: |
    PyTorch is an optimized tensor library for deep learning using GPUs and CPUs
  dev_url: https://github.com/pytorch/pytorch
  doc_url: https://pytorch.org/docs/stable/index.html

extra:
  recipe-maintainers:
    - open-ce/open-ce-dev-team
